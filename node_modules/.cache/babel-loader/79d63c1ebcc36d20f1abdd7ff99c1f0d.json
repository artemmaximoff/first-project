{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_projects\\\\01-first-project\\\\my-app\\\\src\\\\hoc\\\\withAuthRiderect.js\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRiderect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: '/login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 44\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectedAuthRedirectComponent;\n};","map":{"version":3,"sources":["D:/react_projects/01-first-project/my-app/src/hoc/withAuthRiderect.js"],"names":["React","Navigate","connect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRiderect","Component","RedirectComponent","render","props","ConnectedAuthRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,IAAIC,0BAA0B,GAAIC,KAAD,KAAY;AACzCC,EAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADsB,CAAZ,CAAjC;;AAIA,OAAO,MAAME,gBAAgB,GAAIC,SAAD,IAAe;AAC3C,QAAMC,iBAAN,SAAgCT,KAAK,CAACQ,SAAtC,CAAgD;AAC5CE,IAAAA,MAAM,GAAG;AACL,UAAI,CAAC,KAAKC,KAAL,CAAWN,MAAhB,EAAwB,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACxB,0BAAO,QAAC,SAAD,OAAe,KAAKM;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAJ2C;;AAOhD,MAAIC,8BAA8B,GAAGV,OAAO,CAACC,0BAAD,CAAP,CAAoCM,iBAApC,CAArC;AAEA,SAAOG,8BAAP;AAGH,CAbM","sourcesContent":["import React from \"react\"\r\nimport { Navigate, } from \"react-router-dom\"\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRiderect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n\r\n\r\n} "]},"metadata":{},"sourceType":"module"}