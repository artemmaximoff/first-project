{"ast":null,"code":"import _objectSpread from\"D:/react_projects/01-first-project/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{Formik,Form,Field,ErrorMessage,setFieldValue}from\"formik\";import s from'./login.module.css';import*as Yup from\"yup\";import{login}from'../../redux/auth-reducer';import{connect}from'react-redux';import{Navigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var validateLoginForm=function validateLoginForm(values){var errors={};if(!values.email){errors.email='Введите почту';}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)){errors.email='Введите почту';}return errors;};var validationSchemaLoginForm=Yup.object().shape({password:Yup.string().min(5,\"Должно быть более 5 символов\").required(\"Поле обязательно\")});var LoginForm=function LoginForm(props){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Formik,{initialValues:{email:\"\",password:\"\",rememberMe:false},validate:validateLoginForm,validationSchema:validationSchemaLoginForm,validateOnBlur:true,onSubmit:function onSubmit(values,onSubmitProps){console.log(values.email,values.password,values.rememberMe,values.captcha,onSubmitProps.setStatus);props.login(values.email,values.password,values.rememberMe,values.captcha,onSubmitProps.setStatus);},children:function children(error){return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{className:s.field,name:'email',type:'text',placeholder:'email'})}),/*#__PURE__*/_jsx(ErrorMessage,{className:s.error,name:\"email\",component:\"span\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{className:s.field,name:'password',type:'password',placeholder:'password'})}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"password\",component:\"span\",className:s.error}),/*#__PURE__*/_jsx(\"div\",{children:error.status?/*#__PURE__*/_jsx(\"div\",{className:s.error,children:error.status}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Field,{type:'checkbox',name:'rememberMe',id:\"rememberMe\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:'rememberMe',children:\" remember me \"})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[props.captchaUrl&&/*#__PURE__*/_jsx(\"img\",{src:props.captchaUrl}),props.captchaUrl&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{name:'captcha',type:'text',placeholder:''})})]}),/*#__PURE__*/_jsx(\"button\",{className:s.button,type:'submit',children:\"Login\"})]});}})});};var Login=function Login(props){if(props.isAuth){return/*#__PURE__*/_jsx(Navigate,{to:'/profile'});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsx(LoginForm,_objectSpread({},props))]});};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth,captchaUrl:state.auth.captchaUrl};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","setFieldValue","s","Yup","login","connect","Navigate","validateLoginForm","values","errors","email","test","validationSchemaLoginForm","object","shape","password","string","min","required","LoginForm","props","rememberMe","onSubmitProps","console","log","captcha","setStatus","error","field","status","captchaUrl","button","Login","isAuth","mapStateToProps","state","auth"],"sources":["D:/react_projects/01-first-project/my-app/src/components/login/login.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage, setFieldValue } from \"formik\";\r\nimport s from './login.module.css';\r\nimport * as Yup from \"yup\";\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom'\r\n\r\n\r\nconst validateLoginForm = values => {\r\n    const errors = {};\r\n    if (!values.email) {\r\n        errors.email = 'Введите почту';\r\n\r\n    } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n    ) {\r\n        errors.email = 'Введите почту';\r\n    }\r\n    return errors;\r\n};\r\n\r\nconst validationSchemaLoginForm = Yup.object().shape({\r\n\r\n    password: Yup.string()\r\n        .min(5, \"Должно быть более 5 символов\")\r\n        .required(\"Поле обязательно\")\r\n});\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    \r\n\r\n    return (\r\n        <div>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    rememberMe: false\r\n                }}\r\n                validate={validateLoginForm}\r\n                validationSchema={validationSchemaLoginForm}\r\n                validateOnBlur\r\n                onSubmit={(values, onSubmitProps) => {\r\n\r\n                    console.log(values.email, values.password, values.rememberMe, values.captcha, onSubmitProps.setStatus)\r\n                    props.login(values.email, values.password, values.rememberMe, values.captcha, onSubmitProps.setStatus)\r\n                }}\r\n            >\r\n                {(error) => (\r\n                    <Form>\r\n                        <div>\r\n                            <Field\r\n                                className={s.field}\r\n                                name={'email'}\r\n                                type={'text'}\r\n                                placeholder={'email'} />\r\n                        </div>\r\n                        <ErrorMessage className={s.error} name=\"email\" component=\"span\" />\r\n                        <div>\r\n                            <Field\r\n                                className={s.field}\r\n                                name={'password'}\r\n                                type={'password'}\r\n                                placeholder={'password'} />\r\n                        </div>\r\n                        <ErrorMessage name=\"password\" component=\"span\" className={s.error} />\r\n                        <div>\r\n                            {error.status\r\n                                ? <div className={s.error}>{error.status}</div>\r\n                                : <div>\r\n                                    <Field\r\n                                        type={'checkbox'}\r\n                                        name={'rememberMe'}\r\n                                        id='rememberMe' />\r\n                                    <label htmlFor={'rememberMe'}> remember me </label>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            {props.captchaUrl && <img src={props.captchaUrl}></img>}\r\n                            {props.captchaUrl && <div><Field\r\n                                name={'captcha'}\r\n                                type={'text'}\r\n                                placeholder={''} /></div>}\r\n                        </div>\r\n                        <button className={s.button} type={'submit'} >Login</button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst Login = (props) => {\r\n    if (props.isAuth) {\r\n        return <Navigate to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginForm {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { login })(Login);"],"mappings":"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"},"metadata":{},"sourceType":"module"}