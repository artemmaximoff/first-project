{"ast":null,"code":"import * as axios from 'axios';\nconst instance = axios.create({\n  withCredentials: true,\n  headers: {\n    \"API-KEY\": \"f968af23-5c9d-4b46-9533-60557b884aac\"\n  },\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`\n});\nexport const usersAPI = {\n  getUsers() {\n    let currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    return instance.get(`/users?page=${currentPage}&count=${pageSize}`);\n  },\n\n  follow(userId) {\n    return instance.post(`https://social-network.samuraijs.com/api/1.0/follow/${userId}`);\n  },\n\n  unfollow(userId) {\n    return instance.delete(`https://social-network.samuraijs.com/api/1.0/follow/${userId}`);\n  }\n\n};\nexport const authAPI = {\n  authMe() {\n    return instance.get(`auth/me/`);\n  },\n\n  login(email, password) {\n    let rememberMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let captcha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    return instance.post(`auth/login`, {\n      email,\n      password,\n      rememberMe,\n      captcha\n    });\n  },\n\n  logout() {\n    return instance.delete(`/auth/login`);\n  }\n\n};\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/` + userId);\n  },\n\n  getStatus(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n\n  updateStatus(status) {\n    return instance.put(`profile/status`, {\n      status: status\n    });\n  },\n\n  savePhoto(photoFile) {\n    const formData = new FormData();\n    formData.append('image', photoFile);\n    return instance.put(`/profile/photo`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n  },\n\n  changeInfo(profile) {\n    return instance.put(`profile`, profile);\n  }\n\n};\nexport const securityAPI = {\n  getCaptchaUrl() {\n    return instance.get(`security/get-captcha-url`);\n  }\n\n};","map":{"version":3,"sources":["D:/react_projects/01-first-project/my-app/src/api/api.js"],"names":["axios","instance","create","withCredentials","headers","baseURL","usersAPI","getUsers","currentPage","pageSize","get","follow","userId","post","unfollow","delete","authAPI","authMe","login","email","password","rememberMe","captcha","logout","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","changeInfo","profile","securityAPI","getCaptchaUrl"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAE,IADS;AAE1BC,EAAAA,OAAO,EAAE;AACL,eAAW;AADN,GAFiB;AAK1BC,EAAAA,OAAO,EAAG;AALgB,CAAb,CAAjB;AAQA,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,QAAQ,GAAiC;AAAA,QAAhCC,WAAgC,uEAAlB,CAAkB;AAAA,QAAfC,QAAe,uEAAJ,EAAI;AACrC,WAAOR,QAAQ,CAACS,GAAT,CAAc,eAAcF,WAAY,UAASC,QAAS,EAA1D,CAAP;AACH,GAHmB;;AAIpBE,EAAAA,MAAM,CAACC,MAAD,EAAS;AACX,WAAOX,QAAQ,CAACY,IAAT,CAAe,uDAAsDD,MAAO,EAA5E,CAAP;AACH,GANmB;;AAOpBE,EAAAA,QAAQ,CAACF,MAAD,EAAS;AACb,WAAOX,QAAQ,CAACc,MAAT,CAAiB,uDAAsDH,MAAO,EAA9E,CAAP;AACH;;AATmB,CAAjB;AAaP,OAAO,MAAMI,OAAO,GAAG;AACnBC,EAAAA,MAAM,GAAG;AACL,WAAOhB,QAAQ,CAACS,GAAT,CAAc,UAAd,CAAP;AACH,GAHkB;;AAInBQ,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAsD;AAAA,QAApCC,UAAoC,uEAAvB,KAAuB;AAAA,QAAhBC,OAAgB,uEAAN,IAAM;AACvD,WAAOrB,QAAQ,CAACY,IAAT,CAAe,YAAf,EAA4B;AAAEM,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA,UAAnB;AAA+BC,MAAAA;AAA/B,KAA5B,CAAP;AACH,GANkB;;AAOnBC,EAAAA,MAAM,GAAG;AACL,WAAOtB,QAAQ,CAACc,MAAT,CAAiB,aAAjB,CAAP;AACH;;AATkB,CAAhB;AAYP,OAAO,MAAMS,UAAU,GAAG;AACtBC,EAAAA,UAAU,CAACb,MAAD,EAAS;AACf,WAAOX,QAAQ,CAACS,GAAT,CAAc,UAAD,GAAaE,MAA1B,CAAP;AACH,GAHqB;;AAItBc,EAAAA,SAAS,CAACd,MAAD,EAAS;AACd,WAAOX,QAAQ,CAACS,GAAT,CAAc,iBAAD,GAAoBE,MAAjC,CAAP;AACH,GANqB;;AAOtBe,EAAAA,YAAY,CAACC,MAAD,EAAS;AACjB,WAAO3B,QAAQ,CAAC4B,GAAT,CAAc,gBAAd,EAA+B;AAAED,MAAAA,MAAM,EAAEA;AAAV,KAA/B,CAAP;AACH,GATqB;;AAUtBE,EAAAA,SAAS,CAACC,SAAD,EAAY;AACjB,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,SAAzB;AACA,WAAO9B,QAAQ,CAAC4B,GAAT,CAAc,gBAAd,EAA+BG,QAA/B,EAAyC;AAC5C5B,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADmC,KAAzC,CAAP;AAKH,GAlBqB;;AAmBtB+B,EAAAA,UAAU,CAACC,OAAD,EAAU;AAChB,WAAOnC,QAAQ,CAAC4B,GAAT,CAAc,SAAd,EAAwBO,OAAxB,CAAP;AACH;;AArBqB,CAAnB;AAyBP,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,aAAa,GAAG;AACZ,WAAOrC,QAAQ,CAACS,GAAT,CAAc,0BAAd,CAAP;AACH;;AAHsB,CAApB","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"f968af23-5c9d-4b46-9533-60557b884aac\"\r\n    },\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`/users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`https://social-network.samuraijs.com/api/1.0/follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`https://social-network.samuraijs.com/api/1.0/follow/${userId}`)\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me/`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n    },\r\n    logout() {\r\n        return instance.delete(`/auth/login`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status })\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put(`/profile/photo`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            }\r\n        })\r\n    },\r\n    changeInfo(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}