{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_projects\\\\01-first-project\\\\my-app\\\\src\\\\components\\\\common\\\\paginator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport s from './paginator.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet Paginator = _ref => {\n  _s();\n\n  let {\n    totalItemsCount,\n    currentPage,\n    pageSize,\n    onPageChanged,\n    portionSize = 10\n  } = _ref;\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.paginator,\n    children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.paginatorBtn,\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \" \\u041D\\u0430\\u0437\\u0430\\u0434 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", pages.filter(p => p >= leftPortionNumber && p <= rightPortionNumber).map(p => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: currentPage === p ? s.selectedPage : s.pageNumber,\n          onClick: e => {\n            onPageChanged(p);\n          },\n          children: p\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.paginatorBtn,\n      onClick: () => {\n        setPortionNumber(portionNumber + 1);\n      },\n      children: \" >\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["D:/react_projects/01-first-project/my-app/src/components/common/paginator.jsx"],"names":["React","useEffect","useState","s","Paginator","totalItemsCount","currentPage","pageSize","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","paginator","paginatorBtn","filter","p","map","selectedPage","pageNumber","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,CAAP,MAAc,wBAAd;;;AAIA,IAAIC,SAAS,GAAG,QAAiF;AAAA;;AAAA,MAAhF;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA,QAAhC;AAA0CC,IAAAA,aAA1C;AAAyDC,IAAAA,WAAW,GAAG;AAAvE,GAAgF;AAE7F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGE,QAA5B,CAAjB;AACA,MAAIM,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACA,MAAI,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIiB,iBAAiB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAA5D;AACA,MAAIW,kBAAkB,GAAGH,aAAa,GAAGR,WAAzC;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAEN,CAAC,CAACkB,SAAlB;AAAA,eACFJ,aAAa,GAAG,CAAhB,iBACG;AAAQ,MAAA,SAAS,EAAEd,CAAC,CAACmB,YAArB;AAAmC,MAAA,OAAO,EAAE,MAAM;AAAEJ,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,OAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAIH;AAAA,sBAAQJ,KAAK,CACRU,MADG,CACIC,CAAC,IAAIA,CAAC,IAAIL,iBAAL,IAA0BK,CAAC,IAAIJ,kBADxC,EAEHK,GAFG,CAECD,CAAC,IAAI;AACN,4BAAO;AAAM,UAAA,SAAS,EAAElB,WAAW,KAAKkB,CAAhB,GAAoBrB,CAAC,CAACuB,YAAtB,GAAqCvB,CAAC,CAACwB,UAAxD;AACH,UAAA,OAAO,EAAGC,CAAD,IAAO;AAAEpB,YAAAA,aAAa,CAACgB,CAAD,CAAb;AAAkB,WADjC;AAAA,oBACoCA;AADpC;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEH,OALG,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAJG,EAWFR,YAAY,GAAGC,aAAf,iBACG;AAAQ,MAAA,SAAS,EAAEd,CAAC,CAACmB,YAArB;AAAmC,MAAA,OAAO,EAAE,MAAM;AAAEJ,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,OAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAgBH,CA9BD;;GAAIb,S;;KAAAA,S;AA+BJ,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport s from './paginator.module.css';\r\n\r\n\r\n\r\nlet Paginator = ({ totalItemsCount, currentPage, pageSize, onPageChanged, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button className={s.paginatorBtn} onClick={() => { setPortionNumber(portionNumber - 1) }}> Назад </button>\r\n        }\r\n        <span> {pages\r\n            .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n            .map(p => {\r\n                return <span className={currentPage === p ? s.selectedPage : s.pageNumber}\r\n                    onClick={(e) => { onPageChanged(p) }}>{p}</span>\r\n            })}\r\n        </span>\r\n        {portionCount > portionNumber &&\r\n            <button className={s.paginatorBtn} onClick={() => { setPortionNumber(portionNumber + 1) }}> ></button>\r\n        }\r\n    </div>\r\n\r\n}\r\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}