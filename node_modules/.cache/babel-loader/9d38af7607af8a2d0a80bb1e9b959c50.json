{"ast":null,"code":"import { authMe } from './auth-reducer';\nconst INITIALIZED_SUCCESED = 'INITIALIZED_SUCCESED';\nlet initialState = {\n  initialized: false,\n  globalError: null\n};\n\nconst appReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INITIALIZED_SUCCESED:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccesed = () => ({\n  type: INITIALIZED_SUCCESED\n});\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(authMe());\n  promise.then(() => {\n    dispatch(initializedSuccesed());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["D:/react_projects/01-first-project/my-app/src/redux/app-reducer.js"],"names":["authMe","INITIALIZED_SUCCESED","initialState","initialized","globalError","appReducer","state","action","type","initializedSuccesed","initializeApp","dispatch","promise","then"],"mappings":"AAAA,SAASA,MAAT,QAAuB,gBAAvB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE,KADE;AAEfC,EAAAA,WAAW,EAAE;AAFE,CAAnB;;AAKA,MAAMC,UAAU,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAEjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,oBAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHH,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ;AACI,aAAOG,KAAP;AAPR;AAWH,CAbD;;AAeA,OAAO,MAAMG,mBAAmB,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAEP;AAAR,CAAP,CAA5B;AAGP,OAAO,MAAMS,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC7C,MAAIC,OAAO,GAAGD,QAAQ,CAACX,MAAM,EAAP,CAAtB;AACAY,EAAAA,OAAO,CAACC,IAAR,CAAa,MAAM;AACfF,IAAAA,QAAQ,CAACF,mBAAmB,EAApB,CAAR;AACH,GAFD;AAIH,CANM;AAQP,eAAeJ,UAAf","sourcesContent":["import { authMe } from './auth-reducer';\r\nconst INITIALIZED_SUCCESED = 'INITIALIZED_SUCCESED'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    globalError: null\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const initializedSuccesed = () => ({ type: INITIALIZED_SUCCESED });\r\n\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(authMe());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccesed())\r\n    })\r\n\r\n}\r\n\r\nexport default appReducer;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}