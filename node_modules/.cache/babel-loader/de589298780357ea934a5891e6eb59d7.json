{"ast":null,"code":"import { profileAPI } from '../api/api';\nconst ADD_POST = 'ADD-POST';\nconst DELETE_POST = 'DELETE-POST';\nconst SET_USERS_PROFILE = 'SET-USERS-PROFILE';\nconst SET_USERS_STATUS = 'SET-USERS-STATUS';\nconst SAVE_PHOTO = 'SET-PHOTO';\nlet initialState = {\n  recentPostData: [{\n    id: 1,\n    message: 'Hi, How are you?',\n    likesqnt: '12'\n  }, {\n    id: 2,\n    message: \"It's my first post!\",\n    likesqnt: '1'\n  }],\n  profile: null,\n  status: ''\n};\n\nconst profilePageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: 5,\n        message: action.newPostBody,\n        likesqnt: 0\n      };\n      return { ...state,\n        recentPostData: [newPost, ...state.recentPostData]\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        recentPostData: state.recentPostData.filter(p => p.id != action.postId)\n      };\n\n    case SET_USERS_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_USERS_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case SAVE_PHOTO:\n      {\n        return { ...state,\n          profile: { ...state.profile,\n            photos: action.photos\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostCreator = newPostBody => ({\n  type: ADD_POST,\n  newPostBody\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const setUserProfile = profile => ({\n  type: SET_USERS_PROFILE,\n  profile\n});\nexport const setUsersStatus = status => ({\n  type: SET_USERS_STATUS,\n  status\n});\nexport const savePhotoSuccess = photos => ({\n  type: SAVE_PHOTO,\n  photos\n});\nexport const getProfile = userId => async dispatch => {\n  let response = await profileAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setUsersStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setUsersStatus(status));\n  }\n};\nexport const savePhoto = file => async dispatch => {\n  let response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n};\nexport const changeInfo = (profile, setStatus) => async (dispatch, getState) => {\n  const userId = getState().auth.id;\n  const response = await profileAPI.changeInfo(profile);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getProfile(userId));\n  } else {\n    setStatus(response.data.messages);\n    return Promise.reject(response.data.messages);\n  }\n};\nexport default profilePageReducer;","map":{"version":3,"names":["profileAPI","ADD_POST","DELETE_POST","SET_USERS_PROFILE","SET_USERS_STATUS","SAVE_PHOTO","initialState","recentPostData","id","message","likesqnt","profile","status","profilePageReducer","state","action","type","newPost","newPostBody","filter","p","postId","photos","addPostCreator","deletePost","setUserProfile","setUsersStatus","savePhotoSuccess","getProfile","userId","dispatch","response","data","getStatus","updateStatus","resultCode","savePhoto","file","changeInfo","setStatus","getState","auth","messages","Promise","reject"],"sources":["D:/react_projects/01-first-project/my-app/src/redux/profilePage_reducer.js"],"sourcesContent":["import { profileAPI } from '../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst DELETE_POST = 'DELETE-POST'\r\nconst SET_USERS_PROFILE = 'SET-USERS-PROFILE'\r\nconst SET_USERS_STATUS = 'SET-USERS-STATUS'\r\nconst SAVE_PHOTO = 'SET-PHOTO'\r\n\r\nlet initialState = {\r\n    recentPostData: [\r\n        { id: 1, message: 'Hi, How are you?', likesqnt: '12' },\r\n        { id: 2, message: \"It's my first post!\", likesqnt: '1' }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n\r\n};\r\n\r\nconst profilePageReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostBody,\r\n                likesqnt: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                recentPostData: [newPost, ...state.recentPostData],\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                recentPostData: state.recentPostData.filter(p => p.id != action.postId),\r\n            }\r\n\r\n        case SET_USERS_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_USERS_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO: {\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.photos }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const addPostCreator = (newPostBody) => ({ type: ADD_POST, newPostBody });\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\nexport const setUserProfile = (profile) => ({ type: SET_USERS_PROFILE, profile })\r\nexport const setUsersStatus = (status) => ({ type: SET_USERS_STATUS, status })\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO, photos })\r\n\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setUsersStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUsersStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\n\r\nexport const changeInfo = (profile, setStatus) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id\r\n    const response = await profileAPI.changeInfo(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getProfile(userId))\r\n    } else {\r\n        setStatus(response.data.messages);\r\n        return Promise.reject(response.data.messages)\r\n    }\r\n}\r\n\r\nexport default profilePageReducer;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}