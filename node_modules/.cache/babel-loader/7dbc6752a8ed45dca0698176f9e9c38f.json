{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_projects\\\\01-first-project\\\\my-app\\\\src\\\\components\\\\users\\\\users_container.jsx\";\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setCurrentPage, togglefollwingInProgress, getUsers } from '../../redux/usersReducer';\nimport { getPageSize, getUsersList, getCurrentPage, getIsFetching, getFollwingInProgress, getTotalUsersCount } from '../../redux/users-selectors';\nimport React from 'react';\nimport Users from './users';\nimport Preloader from '../common/preloader/preloader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize);\n      /*this.props.toggleIsFetching(true)\r\n      this.props.setCurrentPage(pageNumber);\r\n      usersAPI.getUsers(pageNumber, this.props.pageSize,).then(data => {\r\n          this.props.toggleIsFetching(false)\r\n          this.props.setUsers(data.items)\r\n      })*/\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    /*this.props.toggleIsFetching(true);\r\n    usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        this.props.toggleIsFetching(false)\r\n        this.props.setUsers(data.items);\r\n        this.props.setTotalUsersCount(data.totalCount)\r\n    })*/\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 43\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        toggleIsFetching: this.props.toggleIsFetching,\n        follwingInProgress: this.props.follwingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        follwingInProgress: state.usersPage.follwingInProgress\r\n\r\n    }\r\n}*/\n\n\nlet mapStateToProps = state => {\n  return {\n    users: getUsersList(state),\n    totalUsersCount: getTotalUsersCount(state),\n    pageSize: getPageSize(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    follwingInProgress: getFollwingInProgress(state)\n  };\n};\n/* let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(isFetchingAC(isFetching))\r\n        }\r\n    }\r\n}\r\n*/\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  togglefollwingInProgress,\n  getUsers\n})(UsersContainer);","map":{"version":3,"sources":["D:/react_projects/01-first-project/my-app/src/components/users/users_container.jsx"],"names":["connect","follow","unfollow","setCurrentPage","togglefollwingInProgress","getUsers","getPageSize","getUsersList","getCurrentPage","getIsFetching","getFollwingInProgress","getTotalUsersCount","React","Users","Preloader","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","toggleIsFetching","follwingInProgress","mapStateToProps","state"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,cAA3B,EAA2CC,wBAA3C,EAAqEC,QAArE,QAAqF,0BAArF;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,cAApC,EAAoDC,aAApD,EAAmEC,qBAAnE,EAA0FC,kBAA1F,QAAoH,6BAApH;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;;;AAGA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAWzCC,aAXyC,GAWxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWd,QAAX,CAAoBa,UAApB,EAAgC,KAAKC,KAAL,CAAWC,QAA3C;AAEA;AACR;AACA;AACA;AACA;AACA;AACK,KApBwC;AAAA;;AACzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWd,QAAX,CAAoB,KAAKc,KAAL,CAAWG,WAA/B,EAA4C,KAAKH,KAAL,CAAWC,QAAvD;AACA;AACR;AACA;AACA;AACA;AACA;AACK;;AAaDG,EAAAA,MAAM,GAAG;AAEL,wBAAO;AAAA,8BACH;AAAA,kBAAM,KAAKJ,KAAL,CAAWK,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAxB,GAAwC;AAA9C;AAAA;AAAA;AAAA;AAAA,cADG,eAEH,QAAC,KAAD;AACI,QAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM,eADhC;AAEI,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,QAFzB;AAGI,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,WAH5B;AAII,QAAA,aAAa,EAAE,KAAKL,aAJxB;AAKI,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWO,KALtB;AAMI,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWlB,MANvB;AAOI,QAAA,QAAQ,EAAE,KAAKkB,KAAL,CAAWjB,QAPzB;AAQI,QAAA,gBAAgB,EAAE,KAAKiB,KAAL,CAAWQ,gBARjC;AASI,QAAA,kBAAkB,EAAE,KAAKR,KAAL,CAAWS;AATnC;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA,oBAAP;AAaH;;AArCwC;AA0C7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHJ,IAAAA,KAAK,EAAEnB,YAAY,CAACuB,KAAD,CADhB;AAEHL,IAAAA,eAAe,EAAEd,kBAAkB,CAACmB,KAAD,CAFhC;AAGHV,IAAAA,QAAQ,EAAEd,WAAW,CAACwB,KAAD,CAHlB;AAIHR,IAAAA,WAAW,EAAEd,cAAc,CAACsB,KAAD,CAJxB;AAKHN,IAAAA,UAAU,EAAEf,aAAa,CAACqB,KAAD,CALtB;AAMHF,IAAAA,kBAAkB,EAAElB,qBAAqB,CAACoB,KAAD;AANtC,GAAP;AASH,CAVD;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe9B,OAAO,CAAC6B,eAAD,EAClB;AAAE5B,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA,cAApB;AAAoCC,EAAAA,wBAApC;AAA8DC,EAAAA;AAA9D,CADkB,CAAP,CAEbU,cAFa,CAAf","sourcesContent":["import { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, togglefollwingInProgress, getUsers } from '../../redux/usersReducer';\r\nimport { getPageSize, getUsersList, getCurrentPage, getIsFetching, getFollwingInProgress, getTotalUsersCount } from '../../redux/users-selectors';\r\nimport React from 'react';\r\nimport Users from './users';\r\nimport Preloader from '../common/preloader/preloader';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n        /*this.props.toggleIsFetching(true);\r\n        usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n            this.props.toggleIsFetching(false)\r\n            this.props.setUsers(data.items);\r\n            this.props.setTotalUsersCount(data.totalCount)\r\n        })*/\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n\r\n        /*this.props.toggleIsFetching(true)\r\n        this.props.setCurrentPage(pageNumber);\r\n        usersAPI.getUsers(pageNumber, this.props.pageSize,).then(data => {\r\n            this.props.toggleIsFetching(false)\r\n            this.props.setUsers(data.items)\r\n        })*/\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            <div>{this.props.isFetching ? <Preloader /> : null}</div>\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                toggleIsFetching={this.props.toggleIsFetching}\r\n                follwingInProgress={this.props.follwingInProgress} />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        follwingInProgress: state.usersPage.follwingInProgress\r\n\r\n    }\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersList(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        follwingInProgress: getFollwingInProgress(state)\r\n\r\n    }\r\n}\r\n/* let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(isFetchingAC(isFetching))\r\n        }\r\n    }\r\n}\r\n*/\r\nexport default connect(mapStateToProps,\r\n    { follow, unfollow, setCurrentPage, togglefollwingInProgress, getUsers }\r\n)(UsersContainer);"]},"metadata":{},"sourceType":"module"}