{"ast":null,"code":"import { authAPI, securityAPI } from '../api/api';\nconst SET_USERS_DATA = 'SET_USERS_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  profile: null,\n  isAuth: false,\n  captchaUrl: null\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USERS_DATA:\n    case GET_CAPTCHA_URL_SUCCESS:\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (id, email, login, isAuth, captchaUrl) => ({\n  type: SET_USERS_DATA,\n  payload: {\n    id,\n    email,\n    login,\n    isAuth,\n    captchaUrl\n  }\n});\nexport const getCaptchaUrlSuccess = captchaUrl => ({\n  type: GET_CAPTCHA_URL_SUCCESS,\n  payload: {\n    captchaUrl\n  }\n});\nexport default authReducer;\nexport const authMe = () => async dispatch => {\n  let response = await authAPI.authMe();\n\n  if (response.data.resultCode === 0) {\n    let {\n      id,\n      email,\n      login\n    } = response.data.data;\n    dispatch(setAuthUserData(id, email, login, true));\n  }\n};\nexport const login = (email, password, rememberMe, captcha, setStatus) => async dispatch => {\n  let response = await authAPI.login(email, password, rememberMe, captcha);\n\n  if (response.data.resultCode === 0) {\n    dispatch(authMe());\n  } else {\n    if (response.data.resultCode === 10) {\n      dispatch(getCaptchaUrl());\n    }\n\n    setStatus(response.data.messages[0]);\n  }\n};\nexport const getCaptchaUrl = () => async dispatch => {\n  const response = await securityAPI.getCaptchaUrl();\n  const captchaUrl = response.data.url;\n  dispatch(getCaptchaUrlSuccess(captchaUrl));\n};\nexport const logout = () => async dispatch => {\n  let response = await authAPI.logout();\n\n  if (response.data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false, null));\n  }\n};","map":{"version":3,"names":["authAPI","securityAPI","SET_USERS_DATA","GET_CAPTCHA_URL_SUCCESS","initialState","id","email","login","profile","isAuth","captchaUrl","authReducer","state","action","type","payload","setAuthUserData","getCaptchaUrlSuccess","authMe","dispatch","response","data","resultCode","password","rememberMe","captcha","setStatus","getCaptchaUrl","messages","url","logout"],"sources":["D:/react_projects/01-first-project/my-app/src/redux/auth-reducer.js"],"sourcesContent":["import { authAPI, securityAPI } from '../api/api';\r\n\r\n\r\nconst SET_USERS_DATA = 'SET_USERS_DATA'\r\n\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    profile: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USERS_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth, captchaUrl) => ({ type: SET_USERS_DATA, payload: { id, email, login, isAuth, captchaUrl } });\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({ type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl } });\r\nexport default authReducer;\r\n\r\nexport const authMe = () => async (dispatch) => {\r\n    let response = await authAPI.authMe();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const login = (email, password, rememberMe, captcha, setStatus) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authMe())\r\n    }\r\n\r\n    else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        setStatus(response.data.messages[0]);\r\n    }\r\n\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n\r\n}\r\n\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false, null))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,WAAlB,QAAqC,YAArC;AAGA,MAAMC,cAAc,GAAG,gBAAvB;AAEA,MAAMC,uBAAuB,GAAG,yBAAhC;AAGA,IAAIC,YAAY,GAAG;EACfC,EAAE,EAAE,IADW;EAEfC,KAAK,EAAE,IAFQ;EAGfC,KAAK,EAAE,IAHQ;EAIfC,OAAO,EAAE,IAJM;EAKfC,MAAM,EAAE,KALO;EAMfC,UAAU,EAAE;AANG,CAAnB;;AAUA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBR,YAAyB;EAAA,IAAXS,MAAW;;EAElD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKZ,cAAL;IACA,KAAKC,uBAAL;MACI,OAAO,EACH,GAAGS,KADA;QAEH,GAAGC,MAAM,CAACE;MAFP,CAAP;;IAIJ;MACI,OAAOH,KAAP;EARR;AAYH,CAdD;;AAgBA,OAAO,MAAMI,eAAe,GAAG,CAACX,EAAD,EAAKC,KAAL,EAAYC,KAAZ,EAAmBE,MAAnB,EAA2BC,UAA3B,MAA2C;EAAEI,IAAI,EAAEZ,cAAR;EAAwBa,OAAO,EAAE;IAAEV,EAAF;IAAMC,KAAN;IAAaC,KAAb;IAAoBE,MAApB;IAA4BC;EAA5B;AAAjC,CAA3C,CAAxB;AACP,OAAO,MAAMO,oBAAoB,GAAIP,UAAD,KAAiB;EAAEI,IAAI,EAAEX,uBAAR;EAAiCY,OAAO,EAAE;IAAEL;EAAF;AAA1C,CAAjB,CAA7B;AACP,eAAeC,WAAf;AAEA,OAAO,MAAMO,MAAM,GAAG,MAAM,MAAOC,QAAP,IAAoB;EAC5C,IAAIC,QAAQ,GAAG,MAAMpB,OAAO,CAACkB,MAAR,EAArB;;EACA,IAAIE,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;IAChC,IAAI;MAAEjB,EAAF;MAAMC,KAAN;MAAaC;IAAb,IAAuBa,QAAQ,CAACC,IAAT,CAAcA,IAAzC;IACAF,QAAQ,CAACH,eAAe,CAACX,EAAD,EAAKC,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAhB,CAAR;EACH;AACJ,CANM;AAUP,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAD,EAAQiB,QAAR,EAAkBC,UAAlB,EAA8BC,OAA9B,EAAuCC,SAAvC,KAAqD,MAAOP,QAAP,IAAoB;EAC1F,IAAIC,QAAQ,GAAG,MAAMpB,OAAO,CAACO,KAAR,CAAcD,KAAd,EAAqBiB,QAArB,EAA+BC,UAA/B,EAA2CC,OAA3C,CAArB;;EACA,IAAIL,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;IAChCH,QAAQ,CAACD,MAAM,EAAP,CAAR;EACH,CAFD,MAIK;IACD,IAAIE,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,EAAjC,EAAqC;MACjCH,QAAQ,CAACQ,aAAa,EAAd,CAAR;IACH;;IACDD,SAAS,CAACN,QAAQ,CAACC,IAAT,CAAcO,QAAd,CAAuB,CAAvB,CAAD,CAAT;EACH;AAEJ,CAbM;AAeP,OAAO,MAAMD,aAAa,GAAG,MAAM,MAAOR,QAAP,IAAoB;EACnD,MAAMC,QAAQ,GAAG,MAAMnB,WAAW,CAAC0B,aAAZ,EAAvB;EACA,MAAMjB,UAAU,GAAGU,QAAQ,CAACC,IAAT,CAAcQ,GAAjC;EACAV,QAAQ,CAACF,oBAAoB,CAACP,UAAD,CAArB,CAAR;AAEH,CALM;AASP,OAAO,MAAMoB,MAAM,GAAG,MAAM,MAAOX,QAAP,IAAoB;EAC5C,IAAIC,QAAQ,GAAG,MAAMpB,OAAO,CAAC8B,MAAR,EAArB;;EACA,IAAIV,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;IAChCH,QAAQ,CAACH,eAAe,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,EAA0B,IAA1B,CAAhB,CAAR;EACH;AACJ,CALM"},"metadata":{},"sourceType":"module"}