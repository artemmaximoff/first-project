{"version":3,"file":"static/js/973.b84e10b8.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/profile/about/about.module.css?f7e9","webpack://my-app/./src/components/status/status.module.css?3f7d","components/status/statusWithHooks.jsx","components/profile/about/profileInfoForm.jsx","components/profile/about/about.jsx","webpack://my-app/./src/components/profile/myposts/myposts.module.css?db43","webpack://my-app/./src/components/profile/myposts/new_post/new_post.module.css?0abd","components/profile/myposts/new_post/new_post.jsx","components/profile/myposts/new_post/new_post_container.jsx","webpack://my-app/./src/components/profile/myposts/recent_posts/recent_post.module.css?547f","webpack://my-app/./src/components/profile/myposts/recent_posts/Post/post.module.css?098a","components/profile/myposts/recent_posts/Post/post.jsx","components/profile/myposts/recent_posts/recent_posts.jsx","components/profile/myposts/recent_posts/recent_posts_container.jsx","components/profile/myposts/my_posts.jsx","components/profile/profile.jsx","components/profile/profileContiner.jsx","hoc/withAuthRiderect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"about\":\"about_about__Kn1TB\",\"info\":\"about_info__MzPez\",\"job\":\"about_job__5Fn35\",\"contact\":\"about_contact__5kGC4\",\"error\":\"about_error__TXGvQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"status_status__vlbXO\"};","import s from './status.module.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.status}>\r\n            <div>\r\n                {!editMode &&\r\n                    <div onClick={activateEditMode} >{props.status || \"------\"}</div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input\r\n                            onChange={onStatusChange}\r\n                            autoFocus={true}\r\n                            onBlur={deactivateEditMode}\r\n                            value={status}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport s from './about.module.css';\r\nimport * as Yup from \"yup\";\r\n\r\nconst ProfileInfoForm = ({ profile, changeInfo, setEditMode, ...props }) => {\r\n\r\n    debugger;\r\n    return <div className={s.info} autoFocus={true}\r\n    >\r\n        <span>Описание</span>\r\n        <div><button onClick={() => setEditMode(false)}>Cancel</button></div>\r\n        <div>\r\n            <Formik\r\n                initialValues={profile}\r\n                validateOnBlur\r\n                onSubmit={(values, onSubmitProps) => {\r\n\r\n                    changeInfo(values, onSubmitProps.setStatus).then(\r\n                        () => setEditMode(false)\r\n                    )\r\n\r\n                }}\r\n            >\r\n                {(error) => (\r\n                    <Form>\r\n\r\n                        <div >{error.status && <div className={s.error} >{error.status + ','}</div>}</div>\r\n                        <div className={s.field}>\r\n\r\n                            <div>Имя: </div>\r\n                            <Field\r\n                                name={'fullName'}\r\n                                type={'text'}\r\n                                as={'textarea'}\r\n                                placeholder={''}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className={s.field}>\r\n                            <div>Обо мне: </div>\r\n                            <Field\r\n                                name={'aboutMe'}\r\n                                type={'text'}\r\n                                as={'textarea'}\r\n                                placeholder={''}\r\n                            />\r\n                        </div>\r\n                        <div className={s.field}>\r\n                            <div>Ищет работу: </div>\r\n                            <label>\r\n                                <Field type=\"checkbox\" name=\"lookingForAJob\" />\r\n                            </label>\r\n                        </div>\r\n                        <div className={s.field}>\r\n                            <div>Сфера деятельности: </div>\r\n                            <Field\r\n                                name={'lookingForAJobDescription'}\r\n                                type={'text'}\r\n                                as={'textarea'}\r\n                                placeholder={''}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <div>Контакты:</div>{Object.keys(profile.contacts).map(key =>\r\n                                <div className={s.field}>\r\n                                    <div>{key}</div>\r\n                                    <Field\r\n                                        name={'contacts.' + key}\r\n                                        type={'text'}\r\n                                        as={'textarea'}\r\n                                        placeholder={key}\r\n                                    />\r\n                                </div>)}\r\n                        </div>\r\n\r\n                        <button className={s.button} type={'submit'}>Save</button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n\r\n\r\n\r\n    </div >\r\n}\r\n\r\nexport default ProfileInfoForm","import s from './about.module.css';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport ProfileStatusWithHooks from '../../../components/status/statusWithHooks'\r\nimport { useState } from 'react';\r\nimport ProfileInfoForm from './profileInfoForm';\r\n\r\n\r\nconst About = ({ status, updateStatus, profile, isOwner, savePhoto, changeInfo, ...props }) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files[0]) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const Contact = ({ contactTitle, contactValue }) => {\r\n        return (\r\n            <div className={s.contact}>\r\n                {contactTitle}:  {contactValue}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const ProfileInfo = ({ profile, isOwner, goToEditMode }) => {\r\n\r\n        return <div className={s.info}>\r\n            <span>Описание</span>\r\n            {isOwner && <div><button onClick={goToEditMode} >Редактировать</button></div>}\r\n            <div><span>Имя: </span>{profile.fullName}</div>\r\n            <div><span>Обо мне: </span>{profile.aboutMe}</div>\r\n            <div className={s.job}>\r\n                <span>Ищет работу:</span>\r\n                <span>\r\n                    {profile.lookingForAJob\r\n                        ? <img src='https://free-png.ru/wp-content/uploads/2021/06/free-png.ru-39.png' />\r\n                        : <img src='https://www.meme-arsenal.com/memes/3bc1aa2e7e2b239a1731a76439adcaac.jpg' />}\r\n                </span>\r\n            </div>\r\n            <div><span>Сфера деятельности: </span>{profile.lookingForAJobDescription}</div>\r\n            <div>\r\n                <span>Контакты:</span>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact\r\n                        key={key}\r\n                        contactTitle={key}\r\n                        contactValue={profile.contacts[key]} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            <div className={s.about}>\r\n                <div>\r\n                    <img src={profile.photos.large || userPhoto}></img>\r\n                    <div>{isOwner && <input type={\"file\"} className={s.customfileinput} onChange={onMainPhotoSelected} ></input>}</div>\r\n                </div>\r\n                {editMode\r\n                    ? <ProfileInfoForm profile={profile} changeInfo={changeInfo} setEditMode={setEditMode} />\r\n                    : <ProfileInfo profile={profile} isOwner={isOwner} goToEditMode={() => { setEditMode(true) }} />}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default About;","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"myposts_myPosts__HLO8m\"};","// extracted by mini-css-extract-plugin\nexport default {\"newPost\":\"new_post_newPost__BlLL0\",\"newPostBtn\":\"new_post_newPostBtn__BITy8\"};","import React from 'react';\r\nimport s from './new_post.module.css';\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\n\r\nconst NewPost = (props) => {\r\n\r\n\r\n    let addPost = (newPostBody) => {\r\n        props.addPost(newPostBody);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.newPost}>\r\n            <Formik\r\n                initialValues={{\r\n                    newPostBody: ''\r\n                }}\r\n                onSubmit={(values, { resetForm }) => {\r\n                    console.log(values.newPostBody)\r\n                    addPost(values.newPostBody)\r\n                    resetForm({ values: '' });\r\n                }}\r\n            >\r\n                {() => (\r\n                    <Form>\r\n                        <div>\r\n                            <Field\r\n                                name={'newPostBody'}\r\n                                type={'text'}\r\n                                as={'textarea'}\r\n                                placeholder={'Enter new message'}\r\n                            />\r\n                        </div>\r\n                        <button className={s.newPostBtn} type={'submit'}>Send</button>\r\n                    </Form>\r\n                )}\r\n\r\n            </Formik>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default NewPost; ","import React from 'react';\r\nimport { addPostCreator } from '../../../../redux/profilePage_reducer';\r\nimport { onPostChangeCreator } from '../../../../redux/profilePage_reducer';\r\nimport NewPost from './new_post';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostCreator(newPostBody));\r\n        },\r\n    }\r\n}\r\n\r\nconst NewPostContainer = connect(mapStateToProps, mapDispatchToProps)(NewPost);\r\n\r\nexport default NewPostContainer; ","// extracted by mini-css-extract-plugin\nexport default {\"recentPosts\":\"recent_post_recentPosts__3okpW\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"post_item__5XZJx\"};","import s from './post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src=\"https://www.meme-arsenal.com/memes/ede6da73f226721ea502fde3e1ad9088.jpg\"></img>\r\n                <div>{props.message}</div>\r\n            </div>\r\n            <div><span>Likes: </span>{props.likesqnt}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post; ","\r\nimport s from './recent_post.module.css';\r\nimport Post from './Post/post';\r\n\r\n\r\nconst RecentPosts = (props) => {\r\n\r\n\r\n    let recentPostElements = props.posts.map(p =>\r\n        <Post message={p.message} likesqnt={p.likesqnt} />\r\n    )\r\n\r\n    return (\r\n        <div className={s.recentPosts}>\r\n            {recentPostElements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecentPosts; ","import { connect } from 'react-redux';\r\nimport RecentPosts from './recent_posts';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.recentPostData\r\n    }\r\n}\r\n\r\nconst RecentPostsContainer = connect(mapStateToProps)(RecentPosts);\r\n\r\nexport default RecentPostsContainer; ","import s from './myposts.module.css';\r\nimport NewPostContainer from './new_post/new_post_container';\r\nimport RecentPostsContainer from './recent_posts/recent_posts_container';\r\nimport React from 'react';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    \r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h2>My posts:</h2>\r\n            <NewPostContainer />\r\n            <RecentPostsContainer />\r\n        </div>)\r\n})\r\n\r\nexport default MyPosts;","\r\nimport s from './profile.module.css';\r\nimport About from './about/about';\r\nimport MyPosts from './myposts/my_posts';\r\nimport ContentImg from './content_img/content_img'\r\nimport Preloader from '../common/preloader/preloader';\r\n\r\n\r\n\r\nconst Profile = ({ profile, status, updateStatus, isOwner, savePhoto, changeInfo }) => {\r\n\r\n\r\n    if (!profile) return <Preloader />\r\n\r\n    return (\r\n        <div>\r\n            {/*<ContentImg />*/}\r\n            <About profile={profile} status={status} updateStatus={updateStatus} isOwner={isOwner} savePhoto={savePhoto} changeInfo={changeInfo} />\r\n            <MyPosts />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfile, getStatus, updateStatus, savePhoto, changeInfo } from '../../redux/profilePage_reducer';\r\nimport { withAuthRiderect } from '../../hoc/withAuthRiderect'\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\"\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorisedId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n\r\n        this.props.getStatus(userId)\r\n\r\n        /*profileAPI.getProfile(userId).then(data => {\r\n            this.props.setUserProfile(data);\r\n        })*/\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.router.params.userId}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRiderect(ProfileContainer);\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    isAuth: state.auth.isAuth,\r\n    autorisedId: state.auth.id,\r\n\r\n\r\n});\r\n\r\nfunction withRouter(AuthRedirectComponent) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <AuthRedirectComponent\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, getStatus, updateStatus, savePhoto, changeInfo }),\r\n    withAuthRiderect,\r\n    withRouter,\r\n\r\n)(ProfileContainer)","import React from \"react\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRiderect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n\r\n\r\n} "],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","changeInfo","initialValues","validateOnBlur","onSubmit","values","onSubmitProps","then","error","name","type","as","placeholder","Object","keys","contacts","map","key","isOwner","savePhoto","Contact","contactTitle","contactValue","ProfileInfo","goToEditMode","fullName","aboutMe","lookingForAJob","src","lookingForAJobDescription","photos","large","userPhoto","target","files","newPostBody","resetForm","console","log","addPost","connect","state","newPostText","profilePage","dispatch","addPostCreator","NewPost","message","likesqnt","recentPostElements","posts","p","recentPostData","RecentPosts","React","ProfileContainer","userId","this","router","params","autorisedId","history","push","getProfile","getStatus","refreshProfile","prevProps","prevState","withAuthRiderect","compose","isAuth","auth","id","AuthRedirectComponent","location","useLocation","navigate","useNavigate","useParams","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}